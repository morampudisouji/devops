the docker has changed to enterprice and community edition
https://

docker pull ?
we are pulling an image, image will be converted to a container. what is this process? lets look into that.
hub.docker.com
  "tomcat"
Create Dockerfile
d:\asquare
touch Dockerfile

Reference:
https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/
https://docs.docker.com/engine/reference/builder/#from
Difference between add and copy:
https://www.ctl.io/developers/blog/post/dockerfile-add-vs-copy/

Below are some dockerfile commands you must know:
FROM
The base image for building a new image. This command must be on top of the
dockerfile.
MAINTAINER
Optional, contains the name of the maintainer of the image..
RUN
Used to execute a command during the build process of the docker image.
ADD
Copy a file from the host machine to the new docker image. There is an option to use
an URL for the file, docker will then download that file to the destination directory.
ENV
Define an environment variable.
CMD
Used for executing commands when we build a new container from the docker image.

ENTRYPOINT
Define the default command that will be executed when the container is running.

WORKDIR
This is directive for CMD command to be executed.

USER
Set the user or UID for the container created with the image.

VOLUME
Enable access/linked directory between the container and the host machine.

take the tomacat server to install

create a docker file
go to any drive-->create  afolder-->another folder files
from there open terminal
$touch dockerfile
$661 310 2340

every docker image have certain ,use docker 1.12
$

open docker file  in notepad
and write

Docker is not for OS. but for the practical purpose i am taking ubuntu
hub.docker.com
 "ubuntu"
 Every image has an associated tag link.
 Generally when ever u give  just imGE NAME, THT means that u r usuing tag called latest. 
 if you say just from ubuntu, that is risky in production. it pulls from latest. today latest is 16.04, after couple of years it might be 18.04.
 so it is better to fix tag name.
 
I want to install Apache 

FROM ubuntu:trusty
MAINTAINER asquarezone
RUN apt-get update && apt-get -y install apache2  //RUN is, which will be executed during the bulid process,Whenever you want to create your image. It shouldn't require any human interaction. Hence -y.
EXPOSE 80
CMD ["service","apache2","start"]  //CMD is when ever you docker ,you just say docker RUN, if hte image is presnet in your machine, in your local container, 
// it would pick it up, it will make it as container. while your image is being converted into container, what is the command that should exectute. 
// CMD will be executed, when you are starting your container.

RUN as what will happen, wheneve build and run the container

Note: I would recommend you to go to read teh documentation at docker.
https://docs.docker.com/v1.12/


docker image file execution  doest not allow user interaction,It will fail.
lets start take the ubuntu image from docker hub

We should not take latest version of any image  from docker hub, strict to tag for production

connect to the node by using SSH command
$sudo -i
S cd /home/ubuntu/DockerImages/first
touch Dockerfile
VI Dockerfile
	FROM ubuntu:trusty
	MAINTAINER asquarezone
	RUN apt-get update && apt-get -y install apache2
	EXPOSE 80
	CMD ["service", "apache2","start"]
"docker build"	
	just go to the docker references
		https://docs.docker.com/engine/reference/commandline/build/
docs.docker.com
$ docker build -t first:latest .    //after : is tag. have a habit of creating tag. // -t is tag
# docker build -t first:latest <path of docker file>

Now the image has built.  It is still in local repository.
# docker images. 
i can see my image over here. 
Sources list
	https://askubuntu.com/questions/709699/unable-to-locate-package-docker-engine

build by imagee


# docker images
this is still in local repository. We will learn how to send it to registry soon. 
Write a docker file and build it.
we have done it, we will test and all looks good,we will send to docker registry/hub or private registry.
how to run it

# docker run first:latest
or
# docker run first  (the above two are interactive)

or
#docker run -d first:latest  (run in background)

  starting web server apache2
it has run it and immediately end it 
# apt-get update
# apt-get insall apache2
# service apache2 start
our container what ever we written will be killed once the command is completed.
 this is hte life time of your container
 ping google.com
 this commad has ot returned
 
 the moment
 
 if your docker is running
 # docker ps   // will give the list of containers that are running
 # docker ps -a	 // will give the history of previous containers as well ...
 
 our container starts and gets killed immediatley. The reason for this is,what ever you have written in run command,has executed and it has finish its execution,
 and it has finished its exection. Once that command finished its execution, docker engine reads it and ok, this containers work 
 is done / job done and exits it.
 whenever you want container life time long run, you never write stmts, which would kill immediately.
 
 github.com/docker-library/tomcat
 
 cmd["catalina.sh","run"] // This would be running it, untill and unless you are explicit about it.
 what ever we written\
 
 docker images
 # docker rmi "ImageID"
 "docker rmi"
 # docker rmi -f "imageid"   // To remove an image
 I want my cmd, not to return for ever. for that i am making small changes.
 
 VI Dockerfile
	FROM ubuntu:trusty
	MAINTAINER asquarezone
	RUN apt-get update && apt-get -y install apache2 && service apache2 restart
	EXPOSE 80
	CMD ["ping", "google.xom"]
#docker build -t first.

#docker images
#docker run  -p 8081:80 first

What is the port which was exposed 80. I don't have 80 port free on my mahcine.
I want to map 80 port to 8081 port.
8081 port of my machine will be mapped to 80 port of the container machine. you can write as many ports as you want,you can write 3 ps.


# docker run -p 8081:80 first
or if you give tag , it will be
# docker run -p 8081:80 first:latest2.0

This mode of exection, which shows, what ever our container is doing ,  is called "interactive mode"


Most of the cases, we don't want to show what my container is doing.  
The mode of exection, which doesn't shows, what ever our container is doing ,  is called "detached mode"
# docker run -d -p 8081:80 first:latest2.0
now container is running in the background.


in my aws machine
Custom TCP Rule allow 8081 

machine ip iddress
54.191.126.193:8081
The container will be active, as long as it is running
The moment your press Ctrl+c it iwll be killed
# docker ps -a
docker run -d -p 8081:80 first
are u seeing any logs? no
docker run ps
now your container is running in bakground

docker stop "Container id"

Now let us run the container, in the interactive mode, but we don't want to run, what evr has written in command.  We want to override which ever is written in cmd.


"docker run -it"
#docker run -it first:latest2.0  /bin/bash
root@# // now you are at the bash prompt of the container
root@# service apache2 status
You are executing cmd in  the cotainer.
if you want to get inside of the container, one way is, use interactive mode and pass the command what ever you want to.
what has happened
when every you say it and you pass something after your container name,
    what ever we pass after container that command, will replace, what we passed in CMD.


root@# apt-get install tomcat7
whatever is written after first, willreplace the cmd of the image.

run is basically, what has to be build

# docke run first "/bin/ping yahoo.com"

# docker ps -a


with every docker  run command, we are creating a new container
docker run is not to reuse the container. it will always create a container.  to reuse the container we have only two commands, 
docker start
docker stop
once you do , docker id, we will get docker container id.
docker start "containerid"

you can control the container life cycle by start and stop.

# 

"Deployment of the container "

Exce: try with wordpress, tomcat images...

when to use cm lik puppet and docker
from pup if you have a docker file, you can run these commands. These are linux commands.
In puppet there is a resource called exec resource, just run docker build -t what ever you are trying,  use it from puppet fo chef or puppet.

we would basically once you have jenkins,
jenkins will build war file. we would have war file, we wouldd have  a git, in that git we would havea  a docker.


Once we have a docker , we need a environment where we  need to execute this docker container. 
onceif you are in cloud, you will use ecs,  you really don't need any puppet sort of kind.
If you are not using Cloud, you use chef or  puppet to take the build from jenkins , work on machine, where you can deploy this container.
thats what you do. deployement of th you cm tools can pitch in

once you have docker image,you can use that for building and hosting containers. Thats where configuration management tools are coming in.

why docker? why not linux? why not virtual machines?






170250

120000
 54000
------
104000
------




































































 















































	